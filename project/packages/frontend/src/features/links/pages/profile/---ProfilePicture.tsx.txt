import React, { useEffect, useState } from 'react';
import { useForm } from 'react-hook-form';
import { z } from 'zod';
import { zodResolver } from '@hookform/resolvers/zod';

import styles from './ProfilePicture.module.css';

import {
  MAX_FILE_SIZE,
  ACCEPTED_IMAGE_TYPES,
  profilePictureSchema,
  type ProfilePictureValues,
} from './schemas/picture';

export default function ProfilePicture() {
  const {
    register,
    handleSubmit,
    formState: { errors },
    watch,
  } = useForm<ProfilePictureValues>({
    resolver: zodResolver(profilePictureSchema),
  });

  const [previewUrl, setPreviewUrl] = useState<string | null>(null);

  // Watch the file input and update preview
  const avatarFileList = watch('picture');

  useEffect(() => {
    if (avatarFileList && avatarFileList.length > 0) {
      const file = avatarFileList[0];
      const url = URL.createObjectURL(file);
      setPreviewUrl(url);

      return () => URL.revokeObjectURL(url);
    }
  }, [avatarFileList]);

  const onSubmit = (data: ProfilePictureValues) => {
    const file = data.picture[0];
    console.log('Uploading avatar:', file);

    // In a real app, you'd now upload the file using fetch or axios
  };

  return (
    <form onSubmit={handleSubmit(onSubmit)}>
      <label htmlFor="avatar">Upload Avatar</label>
      <input type="file" accept="image/*" {...register('picture')} />
      {errors.picture && (
        <p style={{ color: 'red' }}>{String(errors?.picture?.message)}</p>
      )}

      {previewUrl && (
        <div>
          <p>Preview:</p>
          <img
            src={previewUrl}
            alt="Avatar Preview"
            style={{ width: 100, height: 100, borderRadius: '50%' }}
          />
        </div>
      )}

      <button type="submit">Submit</button>
    </form>
  );
}
